name: CI/CD Pipeline

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VERSION: 1.8.0

jobs:
  terraform-apply:
    name: Terraform Init, Plan & Apply
    runs-on: ubuntu-latest
    environment:
      name: apply-approval
    outputs:
      ec2_ip: ${{ steps.outputs.outputs.ec2_ip }}
      ssh_key: ${{ steps.outputs.outputs.ssh_key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          
      - name: Terraform Init
        working-directory: terraform/envs/dev
        run: terraform init
        
      - name: Terraform Plan
        working-directory: terraform/envs/dev
        run: terraform plan
        
      - name: Terraform Apply
        working-directory: terraform/envs/dev
        run: terraform apply -auto-approve
        
      - name: Extract Outputs (Private Key & EC2 IP)
        id: outputs
        working-directory: terraform/envs/dev
        run: |
          terraform output -raw private_key_pem > private_key.pem
          echo "ec2_ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT
          echo "ssh_key<<EOF" >> $GITHUB_OUTPUT
          cat private_key.pem >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  docker-build-deploy:
    name: Build, Push Docker & Deploy to EC2
    runs-on: ubuntu-latest
    needs: terraform-apply
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          
      - name: Build and Push Docker Image
        run: |
          export TAG=$(date +%s)
          docker build -t teeboss/springboot-demo:$TAG .
          docker push teeboss/springboot-demo:$TAG
          echo "TAG=$TAG" >> $GITHUB_ENV
          
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ needs.terraform-apply.outputs.ec2_ip }}
          username: ubuntu
          key: ${{ needs.terraform-apply.outputs.ssh_key }}
          script: |
            docker stop springboot-app || true
            docker rm springboot-app || true
            docker pull teeboss/springboot-demo:${{ env.TAG }}
            docker run -d -p 8080:8080 --name springboot-app teeboss/springboot-demo:${{ env.TAG }}

  terraform-destroy:
    name: Terraform Destroy (Manual Approval)
    runs-on: ubuntu-latest
    needs: terraform-apply
    environment:
      name: destroy-approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          
      - name: Terraform Init
        working-directory: terraform/envs/dev
        run: terraform init
        
      - name: Terraform Destroy
        working-directory: terraform/envs/dev
        run: terraform destroy -auto-approve
